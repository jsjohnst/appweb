#
#	test.conf -- Unit test specific configuration
#	
Alias /a/ $DOCUMENT_ROOT/aliasTest/
Alias /abcdefghijk/ $DOCUMENT_ROOT/aliasTest/
Alias /aliasDir/ $DOCUMENT_ROOT/aliasTest/
Alias /aliasFile $DOCUMENT_ROOT/aliasTest/testEjs.ejs

<if AUTH_MODULE>
	AuthGroupFile groups.db
	AuthUserFile users.db
	AuthDigestQop auth
</if>

<if EGI_MODULE>
	<Location /MyInProcScripts/>
		SetHandler egiHandler
	</Location>
</if>

<if CGI_MODULE>
	ScriptAlias /MyScripts/ "$DOCUMENT_ROOT/../cgi-bin/"
	ScriptAlias /YourScripts/ "$DOCUMENT_ROOT/"
</if>

Alias /ejs/ "$DOCUMENT_ROOT/"
Alias /SimpleAlias/ "$DOCUMENT_ROOT/"
Alias /AliasForMyDocuments/ "$DOCUMENT_ROOT/My Documents/"

<Directory $DOCUMENT_ROOT/simpleDir>
	DirectoryIndex index.ejs
</Directory>

#
#	Directories to test basic authentication (see testAuth)
#
<if AUTH_MODULE>
	<Directory $DOCUMENT_ROOT/basic/acme>
		AuthType basic
		AuthName "Acme Inc"
		Require valid-user
	</Directory>

	<Directory $DOCUMENT_ROOT/basic/acme/group>
		AuthType basic
		AuthName "Acme Inc"
		Require group acmeExec
	</Directory>

	<Directory $DOCUMENT_ROOT/basic/acme/joshua>
		AuthType basic
		AuthName "Acme Inc"
		Require user joshua
	</Directory>

	<Directory $DOCUMENT_ROOT/basic/coyote>
		AuthType basic
		AuthName "Coyote Corp"
		Require group coyoteUsers
	</Directory>

	#
	#	Some directories to test digest authentication (see testAuth)
	#
	<Directory $DOCUMENT_ROOT/digest/acme>
		AuthType digest
		AuthName "Acme Inc"
		Require valid-user
	</Directory>

	<Directory $DOCUMENT_ROOT/digest/acme/group>
		AuthType digest
		AuthName "Acme Inc"
		Require group acmeExec
	</Directory>

	<Directory $DOCUMENT_ROOT/digest/acme/joshua>
		AuthType digest
		AuthName "Acme Inc"
		Require user joshua
	</Directory>

	<Directory $DOCUMENT_ROOT/digest/coyote>
		AuthType digest
		AuthName "Coyote Corp"
		Require group coyoteUsers
	</Directory>

	#
	#	Test ACLs
	#
	<Directory $DOCUMENT_ROOT/basic/aclTest>
		AuthType basic
		AuthName "Acme Inc"
		Require acl 0x1
	</Directory>
</if>

<if SSL_MODULE>
    Listen 4014
    LoadModule sslModule mod_ssl
	<VirtualHost *:4014>
		DocumentRoot "$SERVER_ROOT/sslWeb"
		CustomLog logs/ssl.log "%h %l %u %t \"%r\" %>s %b"
		SSLEngine on
		SSLCipherSuite ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP:+eNULL
		SSLProtocol ALL -SSLV2

		#
		#	WARNING: you must regenerate the server.crt and server.key.pem
		#
		SSLCertificateFile "$SERVER_ROOT/ssl/server.crt"
		SSLCertificateKeyFile "$SERVER_ROOT/ssl/server.key.pem"

		# Add these directives to verify client certificates
		#SSLVerifyClient require
		#SSLCACertificateFile "$SERVER_ROOT/ssl/ca.crt"
		#SSLCACertificatePath "$SERVER_ROOT/ssl/certs"
		#SSLCACertificateFile "$SERVER_ROOT/ssl/caBundle.crt
	</VirtualHost>                                  
</if>

Listen 4011
NameVirtualHost *:4011
<VirtualHost *:4011>
	ServerName		localhost
	DocumentRoot	"$SERVER_ROOT/vhostWeb/local1"
</VirtualHost>

<VirtualHost *:4011>
	ServerName 127.0.0.1
	DocumentRoot "$SERVER_ROOT/vhostWeb/local2"
	ResetPipeline
	<if EJS_MODULE>
		AddHandler ejsHandler .ejs
		DirectoryIndex index.ejs
	</if>
	<if EGI_MODULE>
		<Location /myEgi/>
			SetHandler egiHandler
		</Location>
	</if>
</VirtualHost>

#
#	IP virtual host
#
Listen 4012
<VirtualHost *:4012>
	DocumentRoot "$SERVER_ROOT/vhostWeb/acme"
	<if AUTH_MODULE>
		<Directory $DOCUMENT_ROOT/protected>
			AuthType basic
			AuthName "Acme Inc"
			Require user mary
		</Directory>
	</if>
</VirtualHost>

